---
description:
globs:
alwaysApply: false
---
# Flow → Elo Browser 리브랜딩 규칙

이 프로젝트는 Flow Browser에서 Elo Browser로의 리브랜딩 작업을 진행 중입니다. 모든 코드 변경은 이 규칙을 따라야 합니다.

## 📋 체크리스트 참조

리브랜딩 작업의 전체 진행 상황과 상세한 체크리스트는 [docs/rebranding-checklist.md](mdc:docs/rebranding-checklist.md)를 참조하세요.

## 🎯 리브랜딩 원칙

### ✅ 변경해야 할 것들
- **브랜드 이름**: "Flow Browser" → "Elo Browser"
- **API 인터페이스**: `FlowXXXAPI` → `EloXXXAPI`
- **폴더명**: `src/shared/flow/` → `src/shared/elo/`
- **함수명**: `registerFlowProtocol` → `registerEloProtocol`
- **제품 메타데이터**: [package.json](mdc:package.json), [electron-builder.json](mdc:electron-builder.json)
- **사용자 대면 텍스트**: UI, 문서, 설정 등

### ❌ 유지해야 할 것들
- **프로토콜 스킴**: `flow://`, `flow-external://`, `flow-internal://` (호환성)
- **사용자 데이터**: 설정, 북마크, 확장 프로그램 데이터
- **핵심 기능**: 브라우징, 확장 지원, 자동 업데이트

## 🔧 네이밍 컨벤션

### API 인터페이스 변경
```typescript
// Before
export interface FlowBrowserAPI { ... }

// After  
export interface EloBrowserAPI { ... }
```

### 함수명 변경
```typescript
// Before
function registerFlowProtocol() { ... }

// After
function registerEloProtocol() { ... }
```

### Import 경로 변경
```typescript
// Before
import { FlowAPI } from "~/flow/interfaces/...";

// After
import { EloAPI } from "~/elo/interfaces/...";
```

## 📁 파일 구조 변경

### 폴더 이름 변경
- `src/shared/flow/` → `src/shared/elo/`
- 모든 import 경로를 `~/flow/` → `~/elo/`로 업데이트

### 주요 파일들
- **메인 API**: [src/shared/flow/flow.ts](mdc:src/shared/flow/flow.ts)
- **Preload**: [src/preload/index.ts](mdc:src/preload/index.ts)
- **프로토콜**: [src/main/browser/utility/protocols/](mdc:src/main/browser/utility/protocols/)

## ⚠️ 주의사항

### 호환성 유지
1. **프로토콜 스킴 변경 금지**: 기존 사용자의 북마크와 확장 호환성
2. **데이터 경로 유지**: 사용자 설정과 데이터는 기존 위치 유지
3. **점진적 변경**: 한 번에 너무 많은 변경 금지

### 우선순위
1. **높음**: README 링크, 사용자 대면 텍스트
2. **중간**: API 인터페이스, 내부 함수명
3. **낮음**: 프로토콜 마이그레이션 (장기 계획)

## 🧪 테스트 가이드라인

### 필수 테스트
변경 후 반드시 다음을 확인:
```bash
# 빌드 테스트
bun run build:mac

# 타입 체크
bun run typecheck

# 앱 실행 테스트
bun run start
```

### 기능 테스트 체크리스트
- [ ] 앱 실행 및 기본 브라우징
- [ ] 확장 프로그램 로드/관리
- [ ] 설정 저장/로드
- [ ] 자동 업데이트 확인
- [ ] 오류 페이지 동작

## 📝 커밋 가이드라인

### 커밋 메시지 형식
```
refactor(rebrand): [구체적인 변경 내용]

예시:
refactor(rebrand): rename FlowBrowserAPI to EloBrowserAPI
refactor(rebrand): update README download links to Elo
refactor(rebrand): move flow/ folder to elo/
```

### 변경 단위
- **작은 단위**: API 인터페이스별, 파일별로 커밋
- **논리적 그룹**: 관련된 변경사항들을 함께 커밋
- **테스트 포함**: 각 커밋은 빌드 가능한 상태 유지

## 🔄 작업 워크플로우

### 1. 작업 전 확인
1. [docs/rebranding-checklist.md](mdc:docs/rebranding-checklist.md)에서 다음 작업 확인
2. 관련 파일들 백업 고려
3. 브랜치 생성 (필요시)

### 2. 작업 진행
1. 해당 파일/함수 변경
2. Import 경로 업데이트  
3. 타입 오류 수정
4. 빌드 테스트

### 3. 작업 완료
1. 체크리스트 문서 업데이트 (`[ ]` → `[x]`)
2. 진행률 업데이트
3. 커밋 및 푸시
4. 작업 로그 업데이트

## 📊 현재 진행 상황

### 완료된 작업 (60%)
- ✅ 사용자 대면 요소 (UI, 온보딩, 설정)
- ✅ 문서 파일 (README, CONTRIBUTING, docs/)
- ✅ 앱 메타데이터 (package.json, electron-builder.json)

### 남은 작업 (40%)
- ⏳ API 인터페이스 이름 변경 (21개)
- ⏳ 폴더 구조 변경 (flow/ → elo/)
- ⏳ 함수명 변경 (4개 주요 함수)
- ⏳ README 다운로드 링크 수정

## 🚀 다음 우선순위

1. **즉시**: README의 FlowSetup.exe 링크 수정
2. **단계적**: API 인터페이스 이름 변경
3. **마지막**: 폴더 구조 리팩토링

---

**중요**: 이 리브랜딩 작업은 기존 사용자에게 영향을 주지 않으면서 브랜드 일관성을 확보하는 것이 목표입니다. 모든 변경은 신중하게 검토하고 테스트해야 합니다.
